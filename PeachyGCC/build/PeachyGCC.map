Archive member included to satisfy reference by file (symbol)

C:/devkitPro/libtonc/lib\libtonc.a(tonc_bios.o)
                              controlState.o (IntrWait)
C:/devkitPro/devkitARM/bin/../lib/gcc/arm-none-eabi/14.1.0/thumb\libgcc.a(_call_via_rX.o)
                              main.o (_call_via_r3)
C:/devkitPro/devkitARM/bin/../lib/gcc/arm-none-eabi/14.1.0/thumb\libgcc.a(_sync_none.o)
                              (__sync_synchronize_none)
C:/devkitPro/devkitARM/bin/../lib/gcc/arm-none-eabi/14.1.0/../../../../arm-none-eabi/lib/thumb\libg.a(libc_a-init.o)
                              C:/devkitPro/devkitARM/bin/../lib/gcc/arm-none-eabi/14.1.0/../../../../arm-none-eabi/lib/thumb/gba_crt0.o (__libc_init_array)
C:/devkitPro/devkitARM/bin/../lib/gcc/arm-none-eabi/14.1.0/../../../../arm-none-eabi/lib/thumb\libsysbase.a(libsysbase_libsysbase_a-malloc_vars.o)
                              C:/devkitPro/devkitARM/bin/../lib/gcc/arm-none-eabi/14.1.0/../../../../arm-none-eabi/lib/thumb/gba_crt0.o (fake_heap_end)

Discarded input sections

 .text          0x00000000        0x0 C:/devkitPro/devkitARM/bin/../lib/gcc/arm-none-eabi/14.1.0/../../../../arm-none-eabi/lib/thumb/gba_crt0.o
 .data          0x00000000        0x0 C:/devkitPro/devkitARM/bin/../lib/gcc/arm-none-eabi/14.1.0/../../../../arm-none-eabi/lib/thumb/gba_crt0.o
 .bss           0x00000000        0x0 C:/devkitPro/devkitARM/bin/../lib/gcc/arm-none-eabi/14.1.0/../../../../arm-none-eabi/lib/thumb/gba_crt0.o
 .text          0x00000000        0x0 C:/devkitPro/devkitARM/bin/../lib/gcc/arm-none-eabi/14.1.0/thumb/crti.o
 .data          0x00000000        0x0 C:/devkitPro/devkitARM/bin/../lib/gcc/arm-none-eabi/14.1.0/thumb/crti.o
 .bss           0x00000000        0x0 C:/devkitPro/devkitARM/bin/../lib/gcc/arm-none-eabi/14.1.0/thumb/crti.o
 .text          0x00000000        0x0 C:/devkitPro/devkitARM/bin/../lib/gcc/arm-none-eabi/14.1.0/thumb/crtbegin.o
 .data          0x00000000        0x0 C:/devkitPro/devkitARM/bin/../lib/gcc/arm-none-eabi/14.1.0/thumb/crtbegin.o
 .bss           0x00000000        0x0 C:/devkitPro/devkitARM/bin/../lib/gcc/arm-none-eabi/14.1.0/thumb/crtbegin.o
 .rodata.all_implied_fbits
                0x00000000       0x24 C:/devkitPro/devkitARM/bin/../lib/gcc/arm-none-eabi/14.1.0/thumb/crtbegin.o
 .data.__dso_handle
                0x00000000        0x4 C:/devkitPro/devkitARM/bin/../lib/gcc/arm-none-eabi/14.1.0/thumb/crtbegin.o
 .text          0x00000000        0x0 controlState.o
 .data          0x00000000        0x0 controlState.o
 .bss           0x00000000        0x0 controlState.o
 .text          0x00000000        0x0 controlLogic.o
 .data          0x00000000        0x0 controlLogic.o
 .bss           0x00000000        0x0 controlLogic.o
 .text          0x00000000        0x0 controlProfile.o
 .data          0x00000000        0x0 controlProfile.o
 .bss           0x00000000        0x0 controlProfile.o
 .ARM.attributes
                0x00000000       0x1a controlProfile.o
 .text          0x00000000        0x0 linkPortIO.o
 .data          0x00000000        0x0 linkPortIO.o
 .bss           0x00000000        0x0 linkPortIO.o
 .text          0x00000000        0x0 macros.o
 .data          0x00000000        0x0 macros.o
 .bss           0x00000000        0x0 macros.o
 .ARM.attributes
                0x00000000       0x1a macros.o
 .text          0x00000000        0x0 main.o
 .data          0x00000000        0x0 main.o
 .bss           0x00000000        0x0 main.o
 .text          0x00000000        0x0 mainISR.o
 .data          0x00000000        0x0 mainISR.o
 .bss           0x00000000        0x0 mainISR.o
 .text          0x00000000        0x0 memcpy256.o
 .data          0x00000000        0x0 memcpy256.o
 .bss           0x00000000        0x0 memcpy256.o
 .text          0x00000000        0x0 Abutton.o
 .data          0x00000000        0x0 Abutton.o
 .bss           0x00000000        0x0 Abutton.o
 .text          0x00000000        0x0 Bbutton.o
 .data          0x00000000        0x0 Bbutton.o
 .bss           0x00000000        0x0 Bbutton.o
 .text          0x00000000        0x0 Ltrigger.o
 .data          0x00000000        0x0 Ltrigger.o
 .bss           0x00000000        0x0 Ltrigger.o
 .text          0x00000000        0x0 Rtrigger.o
 .data          0x00000000        0x0 Rtrigger.o
 .bss           0x00000000        0x0 Rtrigger.o
 .text          0x00000000        0x0 STARTbutton.o
 .data          0x00000000        0x0 STARTbutton.o
 .bss           0x00000000        0x0 STARTbutton.o
 .text          0x00000000        0x0 Xbutton.o
 .data          0x00000000        0x0 Xbutton.o
 .bss           0x00000000        0x0 Xbutton.o
 .text          0x00000000        0x0 Ybutton.o
 .data          0x00000000        0x0 Ybutton.o
 .bss           0x00000000        0x0 Ybutton.o
 .text          0x00000000        0x0 ZbuttonPressed.o
 .data          0x00000000        0x0 ZbuttonPressed.o
 .bss           0x00000000        0x0 ZbuttonPressed.o
 .text          0x00000000        0x0 ZbuttonUnpressed.o
 .data          0x00000000        0x0 ZbuttonUnpressed.o
 .bss           0x00000000        0x0 ZbuttonUnpressed.o
 .text          0x00000000        0x0 cStick.o
 .data          0x00000000        0x0 cStick.o
 .bss           0x00000000        0x0 cStick.o
 .text          0x00000000        0x0 dPadLR.o
 .data          0x00000000        0x0 dPadLR.o
 .bss           0x00000000        0x0 dPadLR.o
 .text          0x00000000        0x0 dPadUD.o
 .data          0x00000000        0x0 dPadUD.o
 .bss           0x00000000        0x0 dPadUD.o
 .text          0x00000000        0x0 dStick.o
 .data          0x00000000        0x0 dStick.o
 .bss           0x00000000        0x0 dStick.o
 .text          0x00000000        0x0 gcc.o
 .data          0x00000000        0x0 gcc.o
 .bss           0x00000000        0x0 gcc.o
 .text          0x00000000        0x0 hexChars.o
 .data          0x00000000        0x0 hexChars.o
 .bss           0x00000000        0x0 hexChars.o
 .rodata        0x00000000      0x200 hexChars.o
 .ARM.attributes
                0x00000000       0x1a hexChars.o
 .text          0x00000000        0x0 palette.o
 .data          0x00000000        0x0 palette.o
 .bss           0x00000000        0x0 palette.o
 .data          0x00000000        0x0 C:/devkitPro/libtonc/lib\libtonc.a(tonc_bios.o)
 .bss           0x00000000        0x0 C:/devkitPro/libtonc/lib\libtonc.a(tonc_bios.o)
 .data          0x00000000        0x0 C:/devkitPro/devkitARM/bin/../lib/gcc/arm-none-eabi/14.1.0/thumb\libgcc.a(_call_via_rX.o)
 .bss           0x00000000        0x0 C:/devkitPro/devkitARM/bin/../lib/gcc/arm-none-eabi/14.1.0/thumb\libgcc.a(_call_via_rX.o)
 .text          0x00000000        0x4 C:/devkitPro/devkitARM/bin/../lib/gcc/arm-none-eabi/14.1.0/thumb\libgcc.a(_sync_none.o)
 .data          0x00000000        0x0 C:/devkitPro/devkitARM/bin/../lib/gcc/arm-none-eabi/14.1.0/thumb\libgcc.a(_sync_none.o)
 .bss           0x00000000        0x0 C:/devkitPro/devkitARM/bin/../lib/gcc/arm-none-eabi/14.1.0/thumb\libgcc.a(_sync_none.o)
 .ARM.attributes
                0x00000000       0x1c C:/devkitPro/devkitARM/bin/../lib/gcc/arm-none-eabi/14.1.0/thumb\libgcc.a(_sync_none.o)
 .text          0x00000000        0x0 C:/devkitPro/devkitARM/bin/../lib/gcc/arm-none-eabi/14.1.0/../../../../arm-none-eabi/lib/thumb\libg.a(libc_a-init.o)
 .data          0x00000000        0x0 C:/devkitPro/devkitARM/bin/../lib/gcc/arm-none-eabi/14.1.0/../../../../arm-none-eabi/lib/thumb\libg.a(libc_a-init.o)
 .bss           0x00000000        0x0 C:/devkitPro/devkitARM/bin/../lib/gcc/arm-none-eabi/14.1.0/../../../../arm-none-eabi/lib/thumb\libg.a(libc_a-init.o)
 .text          0x00000000        0x0 C:/devkitPro/devkitARM/bin/../lib/gcc/arm-none-eabi/14.1.0/../../../../arm-none-eabi/lib/thumb\libsysbase.a(libsysbase_libsysbase_a-malloc_vars.o)
 .data          0x00000000        0x0 C:/devkitPro/devkitARM/bin/../lib/gcc/arm-none-eabi/14.1.0/../../../../arm-none-eabi/lib/thumb\libsysbase.a(libsysbase_libsysbase_a-malloc_vars.o)
 .bss           0x00000000        0x0 C:/devkitPro/devkitARM/bin/../lib/gcc/arm-none-eabi/14.1.0/../../../../arm-none-eabi/lib/thumb\libsysbase.a(libsysbase_libsysbase_a-malloc_vars.o)
 .bss.fake_heap_start
                0x00000000        0x4 C:/devkitPro/devkitARM/bin/../lib/gcc/arm-none-eabi/14.1.0/../../../../arm-none-eabi/lib/thumb\libsysbase.a(libsysbase_libsysbase_a-malloc_vars.o)
 .text          0x00000000        0x0 C:/devkitPro/devkitARM/bin/../lib/gcc/arm-none-eabi/14.1.0/thumb/crtend.o
 .data          0x00000000        0x0 C:/devkitPro/devkitARM/bin/../lib/gcc/arm-none-eabi/14.1.0/thumb/crtend.o
 .bss           0x00000000        0x0 C:/devkitPro/devkitARM/bin/../lib/gcc/arm-none-eabi/14.1.0/thumb/crtend.o
 .rodata.all_implied_fbits
                0x00000000       0x24 C:/devkitPro/devkitARM/bin/../lib/gcc/arm-none-eabi/14.1.0/thumb/crtend.o
 .text          0x00000000        0x0 C:/devkitPro/devkitARM/bin/../lib/gcc/arm-none-eabi/14.1.0/thumb/crtn.o
 .data          0x00000000        0x0 C:/devkitPro/devkitARM/bin/../lib/gcc/arm-none-eabi/14.1.0/thumb/crtn.o
 .bss           0x00000000        0x0 C:/devkitPro/devkitARM/bin/../lib/gcc/arm-none-eabi/14.1.0/thumb/crtn.o

Memory Configuration

Name             Origin             Length             Attributes
rom              0x08000000         0x02000000
iwram            0x03000000         0x00008000
ewram            0x02000000         0x00040000
*default*        0x00000000         0xffffffff

Linker script and memory map

                0x00000000                        __sync_synchronize = __sync_synchronize_none
                0x02000000                        __text_start = ORIGIN (ewram)
                0x02040000                        __eheap_end = (ORIGIN (ewram) + LENGTH (ewram))
                0x03000000                        __iwram_start = ORIGIN (iwram)
                0x03008000                        __iwram_top = (ORIGIN (iwram) + LENGTH (iwram))
                0x03007fa0                        __sp_irq = (__iwram_top - 0x60)
                0x03007f00                        __sp_usr = (__sp_irq - 0xa0)
                0x03007ff8                        __irq_flags = 0x3007ff8
                0x02000000                        . = __text_start
                0x02000000                        . = __text_start

.crt0           0x02000000      0x210
 *(.crt0)
 .crt0          0x02000000      0x210 C:/devkitPro/devkitARM/bin/../lib/gcc/arm-none-eabi/14.1.0/../../../../arm-none-eabi/lib/thumb/gba_crt0.o
                0x02000000                _start
                0x020000c4                __boot_method
                0x020000c5                __slave_number
                0x020000e0                start_vector
                0x02000210                        . = ALIGN (0x4)

.init           0x02000210        0xc
 *(SORT_NONE(.init))
 .init          0x02000210        0x4 C:/devkitPro/devkitARM/bin/../lib/gcc/arm-none-eabi/14.1.0/thumb/crti.o
                0x02000210                _init
 .init          0x02000214        0x8 C:/devkitPro/devkitARM/bin/../lib/gcc/arm-none-eabi/14.1.0/thumb/crtn.o

.plt            0x0200021c        0x0
 *(.plt)
                0x0200021c                        . = ALIGN (0x4)

.text           0x0200021c      0x16c
 *(EXCLUDE_FILE(*.iwram*) .text*)
 .text.__do_global_dtors_aux
                0x0200021c       0x2c C:/devkitPro/devkitARM/bin/../lib/gcc/arm-none-eabi/14.1.0/thumb/crtbegin.o
 .text.frame_dummy
                0x02000248       0x24 C:/devkitPro/devkitARM/bin/../lib/gcc/arm-none-eabi/14.1.0/thumb/crtbegin.o
 .text          0x0200026c       0x8c C:/devkitPro/libtonc/lib\libtonc.a(tonc_bios.o)
                0x0200026c                SoftReset
                0x02000270                RegisterRamReset
                0x02000274                Halt
                0x02000278                Stop
                0x0200027c                IntrWait
                0x02000280                VBlankIntrWait
                0x02000284                Div
                0x02000288                DivArm
                0x0200028c                Sqrt
                0x02000290                ArcTan
                0x02000294                ArcTan2
                0x02000298                CpuSet
                0x0200029c                CpuFastSet
                0x020002a0                BiosCheckSum
                0x020002a4                BgAffineSet
                0x020002a8                ObjAffineSet
                0x020002ac                BitUnPack
                0x020002b0                LZ77UnCompWram
                0x020002b4                LZ77UnCompVram
                0x020002b8                HuffUnComp
                0x020002bc                RLUnCompWram
                0x020002c0                RLUnCompVram
                0x020002c4                Diff8bitUnFilterWram
                0x020002c8                Diff8bitUnFilterVram
                0x020002cc                Diff16bitUnFilter
                0x020002d0                SoundBias
                0x020002d4                SoundDriverInit
                0x020002d8                SoundDriverMode
                0x020002dc                SoundDriverMain
                0x020002e0                SoundDriverVSync
                0x020002e4                SoundChannelClear
                0x020002e8                MidiKey2Freq
                0x020002ec                MultiBoot
                0x020002f0                SoundDriverVSyncOff
                0x020002f4                SoundDriverVSyncOn
 .text          0x020002f8       0x3c C:/devkitPro/devkitARM/bin/../lib/gcc/arm-none-eabi/14.1.0/thumb\libgcc.a(_call_via_rX.o)
                0x020002f8                _call_via_r0
                0x020002fc                _call_via_r1
                0x02000300                _call_via_r2
                0x02000304                _call_via_r3
                0x02000308                _call_via_r4
                0x0200030c                _call_via_r5
                0x02000310                _call_via_r6
                0x02000314                _call_via_r7
                0x02000318                _call_via_r8
                0x0200031c                _call_via_r9
                0x02000320                _call_via_sl
                0x02000324                _call_via_fp
                0x02000328                _call_via_ip
                0x0200032c                _call_via_sp
                0x02000330                _call_via_lr
 .text.__libc_init_array
                0x02000334       0x54 C:/devkitPro/devkitARM/bin/../lib/gcc/arm-none-eabi/14.1.0/../../../../arm-none-eabi/lib/thumb\libg.a(libc_a-init.o)
                0x02000334                __libc_init_array
 *(.gnu.linkonce.t.*)
 *(.text.*personality*)
 *(.gnu.warning)
 *(.glue_7t)
 .glue_7t       0x02000388        0x0 linker stubs
 *(.glue_7)
 .glue_7        0x02000388        0x0 linker stubs
 *(.vfp11_veneer)
 .vfp11_veneer  0x02000388        0x0 linker stubs
                0x02000388                        . = ALIGN (0x4)
                0x02000388                        __text_end = .

.v4_bx          0x02000388        0x0
 .v4_bx         0x02000388        0x0 linker stubs

.iplt           0x02000388        0x0
 .iplt          0x02000388        0x0 C:/devkitPro/devkitARM/bin/../lib/gcc/arm-none-eabi/14.1.0/../../../../arm-none-eabi/lib/thumb/gba_crt0.o

.fini           0x02000388        0xc
 *(.fini)
 .fini          0x02000388        0x4 C:/devkitPro/devkitARM/bin/../lib/gcc/arm-none-eabi/14.1.0/thumb/crti.o
                0x02000388                _fini
 .fini          0x0200038c        0x8 C:/devkitPro/devkitARM/bin/../lib/gcc/arm-none-eabi/14.1.0/thumb/crtn.o
                0x02000394                        . = ALIGN (0x4)

.rodata         0x02000394     0x2760
 *(.rodata)
 .rodata        0x02000394      0x2a0 controlState.o
                0x02000394                spriteObjs
                0x020004e4                cStickObj
                0x020004fc                dStickObj
                0x02000514                RtriggerObj
                0x0200052c                LtriggerObj
                0x02000544                STARTbuttonObj
                0x0200055c                dPadRObj
                0x02000574                dPadLObj
                0x0200058c                dPadDObj
                0x020005a4                dPadUObj
                0x020005bc                ZbuttonObj
                0x020005d4                YbuttonObj
                0x020005ec                XbuttonObj
                0x02000604                BbuttonObj
                0x0200061c                AbuttonObj
 .rodata        0x02000634      0x200 Abutton.o
                0x02000634                AbuttonTiles
 .rodata        0x02000834       0x80 Bbutton.o
                0x02000834                BbuttonTiles
 .rodata        0x020008b4      0x100 Ltrigger.o
                0x020008b4                LtriggerTiles
 .rodata        0x020009b4      0x100 Rtrigger.o
                0x020009b4                RtriggerTiles
 .rodata        0x02000ab4       0x20 STARTbutton.o
                0x02000ab4                STARTbuttonTiles
 .rodata        0x02000ad4       0x40 Xbutton.o
                0x02000ad4                XbuttonTiles
 .rodata        0x02000b14       0x40 Ybutton.o
                0x02000b14                YbuttonTiles
 .rodata        0x02000b54      0x100 ZbuttonPressed.o
                0x02000b54                ZbuttonPressedTiles
 .rodata        0x02000c54      0x100 ZbuttonUnpressed.o
                0x02000c54                ZbuttonUnpressedTiles
 .rodata        0x02000d54       0x80 cStick.o
                0x02000d54                cStickTiles
 .rodata        0x02000dd4       0x40 dPadLR.o
                0x02000dd4                dPadLRTiles
 .rodata        0x02000e14       0x40 dPadUD.o
                0x02000e14                dPadUDTiles
 .rodata        0x02000e54      0x200 dStick.o
                0x02000e54                dStickTiles
 .rodata        0x02001054     0x18a0 gcc.o
                0x02001054                gccTiles
                0x020020f4                gccMap
 .rodata        0x020028f4      0x200 palette.o
                0x020028f4                palettePal
 *all.rodata*(*)
 *(.roda)
 *(.rodata.*)
 *(.gnu.linkonce.r*)
                0x02002af4                        . = ALIGN (0x4)

.ARM.extab
 *(.ARM.extab* .gnu.linkonce.armextab.*)
                0x02002af4                        __exidx_start = .

.ARM.exidx
 *(.ARM.exidx* .gnu.linkonce.armexidx.*)
                0x02002af4                        __exidx_end = .
                0x02002af4                        . = ALIGN (0x4)
                0x02002af4                        PROVIDE (__preinit_array_start = .)

.preinit_array
 *(.preinit_array)
                0x02002af4                        PROVIDE (__preinit_array_end = .)
                0x02002af4                        PROVIDE (__init_array_start = .)

.init_array     0x02002af4        0x4
 *(.init_array)
 .init_array    0x02002af4        0x4 C:/devkitPro/devkitARM/bin/../lib/gcc/arm-none-eabi/14.1.0/thumb/crtbegin.o
                0x02002af8                        PROVIDE (__init_array_end = .)
                [!provide]                        PROVIDE (__fini_array_start = .)

.fini_array     0x02002af8        0x4
 *(.fini_array)
 .fini_array    0x02002af8        0x4 C:/devkitPro/devkitARM/bin/../lib/gcc/arm-none-eabi/14.1.0/thumb/crtbegin.o
                [!provide]                        PROVIDE (__fini_array_end = .)

.ctors          0x02002afc        0x0
 *crtbegin.o(.ctors)
 *(EXCLUDE_FILE(*crtend.o) .ctors)
 *(SORT_BY_NAME(.ctors.*))
 *(.ctors)
                0x02002afc                        . = ALIGN (0x4)

.dtors          0x02002afc        0x0
 *crtbegin.o(.dtors)
 *(EXCLUDE_FILE(*crtend.o) .dtors)
 *(SORT_BY_NAME(.dtors.*))
 *(.dtors)
                0x02002afc                        . = ALIGN (0x4)

.jcr
 *(.jcr)

.eh_frame       0x02002afc        0x4
 *(.eh_frame)
 .eh_frame      0x02002afc        0x0 C:/devkitPro/devkitARM/bin/../lib/gcc/arm-none-eabi/14.1.0/thumb/crtbegin.o
 .eh_frame      0x02002afc        0x4 C:/devkitPro/devkitARM/bin/../lib/gcc/arm-none-eabi/14.1.0/thumb/crtend.o
                0x02002b00                        . = ALIGN (0x4)

.gcc_except_table
                0x02002b00        0x0
 *(.gcc_except_table)
                0x02002b00                        . = ALIGN (0x4)
                0x02002b00                        __iwram_lma = .

.iwram          0x03000000      0x640 load address 0x02002b00
                0x03000000                        __iwram_start__ = ABSOLUTE (.)
 *(.iwram)
 .iwram         0x03000000      0x30c controlLogic.o
                0x03000000                processInput
                0x030002c8                controllerState
 .iwram         0x0300030c      0x280 linkPortIO.o
                0x0300030c                linkPortISR
 .iwram         0x0300058c       0x54 mainISR.o
                0x0300058c                ISRmain
 .iwram         0x030005e0       0x60 memcpy256.o
                0x030005e0                memcpy256
 *iwram.*(.text*)
                0x03000640                        . = ALIGN (0x4)
                0x03000640                        __iwram_end__ = ABSOLUTE (.)
                0x02003140                        __data_lma = (__iwram_lma + SIZEOF (.iwram))

.bss            0x03000640       0x20
                0x03000640                        __bss_start__ = ABSOLUTE (.)
 *(.dynbss)
 *(.gnu.linkonce.b*)
 *(.bss*)
 .bss.completed.1
                0x03000640        0x1 C:/devkitPro/devkitARM/bin/../lib/gcc/arm-none-eabi/14.1.0/thumb/crtbegin.o
 *fill*         0x03000641        0x3 
 .bss.object.0  0x03000644       0x18 C:/devkitPro/devkitARM/bin/../lib/gcc/arm-none-eabi/14.1.0/thumb/crtbegin.o
 .bss.fake_heap_end
                0x0300065c        0x4 C:/devkitPro/devkitARM/bin/../lib/gcc/arm-none-eabi/14.1.0/../../../../arm-none-eabi/lib/thumb\libsysbase.a(libsysbase_libsysbase_a-malloc_vars.o)
                0x0300065c                fake_heap_end
 *(COMMON)
                0x03000660                        . = ALIGN (0x4)
                0x03000660                        __bss_end__ = ABSOLUTE (.)

.data           0x03000660        0x0 load address 0x02003140
                0x03000660                        __data_start__ = ABSOLUTE (.)
 *(.data)
 *(.data.*)
 *(.gnu.linkonce.d*)
                0x03000660                        . = ALIGN (0x4)
                0x03000660                        __data_end__ = ABSOLUTE (.)
                0x02003140                        __iwram_overlay_lma = (__data_lma + SIZEOF (.data))
                [!provide]                        PROVIDE (edata = .)
                0x03000660                        __iwram_overlay_start = .

.igot.plt       0x03000640        0x0 load address 0x02003140
 .igot.plt      0x03000640        0x0 C:/devkitPro/devkitARM/bin/../lib/gcc/arm-none-eabi/14.1.0/../../../../arm-none-eabi/lib/thumb/gba_crt0.o

.iwram0         0x03000660        0x0 load address 0x02003140
 *(.iwram0)
                0x03000660                        . = ALIGN (0x4)
                0x02003140                        PROVIDE (__load_start_iwram0 = LOADADDR (.iwram0))
                0x02003140                        PROVIDE (__load_stop_iwram0 = (LOADADDR (.iwram0) + SIZEOF (.iwram0)))

.iwram1         0x03000660        0x0
 *(.iwram1)
                0x03000660                        . = ALIGN (0x4)
                [!provide]                        PROVIDE (__load_start_iwram1 = LOADADDR (.iwram1))
                [!provide]                        PROVIDE (__load_stop_iwram1 = (LOADADDR (.iwram1) + SIZEOF (.iwram1)))

.iwram2         0x03000660        0x0
 *(.iwram2)
                0x03000660                        . = ALIGN (0x4)
                [!provide]                        PROVIDE (__load_start_iwram2 = LOADADDR (.iwram2))
                [!provide]                        PROVIDE (__load_stop_iwram2 = (LOADADDR (.iwram2) + SIZEOF (.iwram2)))

.iwram3         0x03000660        0x0
 *(.iwram3)
                0x03000660                        . = ALIGN (0x4)
                [!provide]                        PROVIDE (__load_start_iwram3 = LOADADDR (.iwram3))
                [!provide]                        PROVIDE (__load_stop_iwram3 = (LOADADDR (.iwram3) + SIZEOF (.iwram3)))

.iwram4         0x03000660        0x0
 *(.iwram4)
                0x03000660                        . = ALIGN (0x4)
                [!provide]                        PROVIDE (__load_start_iwram4 = LOADADDR (.iwram4))
                [!provide]                        PROVIDE (__load_stop_iwram4 = (LOADADDR (.iwram4) + SIZEOF (.iwram4)))

.iwram5         0x03000660        0x0
 *(.iwram5)
                0x03000660                        . = ALIGN (0x4)
                [!provide]                        PROVIDE (__load_start_iwram5 = LOADADDR (.iwram5))
                [!provide]                        PROVIDE (__load_stop_iwram5 = (LOADADDR (.iwram5) + SIZEOF (.iwram5)))

.iwram6         0x03000660        0x0
 *(.iwram6)
                0x03000660                        . = ALIGN (0x4)
                [!provide]                        PROVIDE (__load_start_iwram6 = LOADADDR (.iwram6))
                [!provide]                        PROVIDE (__load_stop_iwram6 = (LOADADDR (.iwram6) + SIZEOF (.iwram6)))

.iwram7         0x03000660        0x0
 *(.iwram7)
                0x03000660                        . = ALIGN (0x4)
                [!provide]                        PROVIDE (__load_start_iwram7 = LOADADDR (.iwram7))
                [!provide]                        PROVIDE (__load_stop_iwram7 = (LOADADDR (.iwram7) + SIZEOF (.iwram7)))

.iwram8         0x03000660        0x0
 *(.iwram8)
                0x03000660                        . = ALIGN (0x4)
                [!provide]                        PROVIDE (__load_start_iwram8 = LOADADDR (.iwram8))
                [!provide]                        PROVIDE (__load_stop_iwram8 = (LOADADDR (.iwram8) + SIZEOF (.iwram8)))

.iwram9         0x03000660        0x0
 *(.iwram9)
                0x03000660                        . = ALIGN (0x4)
                [!provide]                        PROVIDE (__load_start_iwram9 = LOADADDR (.iwram9))
                [!provide]                        PROVIDE (__load_stop_iwram9 = (LOADADDR (.iwram9) + SIZEOF (.iwram9)))
                0x02003140                        __ewram_lma = ((((((((((LOADADDR (.iwram0) + SIZEOF (.iwram0)) + SIZEOF (.iwram1)) + SIZEOF (.iwram2)) + SIZEOF (.iwram3)) + SIZEOF (.iwram4)) + SIZEOF (.iwram5)) + SIZEOF (.iwram6)) + SIZEOF (.iwram7)) + SIZEOF (.iwram8)) + SIZEOF (.iwram9))
                0x02003140                        __iwram_overlay_end = __ewram_lma
                0x02003140                        __ewram_start = __ewram_lma

.ewram          0x02003140      0x3e8
 *(.ewram)
 .ewram         0x02003140      0x2d0 controlState.o
                0x02003140                controlStateEntry
                0x02003204                controlStateProcess
                0x0200340c                controlStateExit
 .ewram         0x02003410       0x24 controlProfile.o
                0x02003410                controlProfile
 .ewram         0x02003434       0x20 macros.o
                0x02003434                macros
 .ewram         0x02003454       0xb0 main.o
                0x02003454                main
 *fill*         0x02003504        0x4 ff
 .ewram.__stub  0x02003508       0x18 linker stubs
                0x02003520                        . = ALIGN (0x4)
                0x02003528                        __ewram_end = ABSOLUTE (.)
                0x02003528                        __ewram_overlay_lma = (__ewram_lma + SIZEOF (.ewram))

.rel.dyn        0x02003528        0x0
 .rel.iplt      0x02003528        0x0 C:/devkitPro/devkitARM/bin/../lib/gcc/arm-none-eabi/14.1.0/../../../../arm-none-eabi/lib/thumb/gba_crt0.o

.sbss           0x02003528        0x0
                0x02003528                        __sbss_start__ = ABSOLUTE (.)
 *(.sbss)
                0x02003528                        . = ALIGN (0x4)
                0x02003528                        __sbss_end__ = ABSOLUTE (.)
                0x02003528                        __end__ = ABSOLUTE (.)
                0x02003528                        __eheap_start = ABSOLUTE (.)

.ewram0         0x02003528        0x0
 *(.ewram0)
                0x02003528                        . = ALIGN (0x4)
                [!provide]                        PROVIDE (__load_start_ewram0 = LOADADDR (.ewram0))
                [!provide]                        PROVIDE (__load_stop_ewram0 = (LOADADDR (.ewram0) + SIZEOF (.ewram0)))

.ewram1         0x02003528        0x0
 *(.ewram1)
                0x02003528                        . = ALIGN (0x4)
                [!provide]                        PROVIDE (__load_start_ewram1 = LOADADDR (.ewram1))
                [!provide]                        PROVIDE (__load_stop_ewram1 = (LOADADDR (.ewram1) + SIZEOF (.ewram1)))

.ewram2         0x02003528        0x0
 *(.ewram2)
                0x02003528                        . = ALIGN (0x4)
                [!provide]                        PROVIDE (__load_start_ewram2 = LOADADDR (.ewram2))
                [!provide]                        PROVIDE (__load_stop_ewram2 = (LOADADDR (.ewram2) + SIZEOF (.ewram2)))

.ewram3         0x02003528        0x0
 *(.ewram3)
                0x02003528                        . = ALIGN (0x4)
                [!provide]                        PROVIDE (__load_start_ewram3 = LOADADDR (.ewram3))
                [!provide]                        PROVIDE (__load_stop_ewram3 = (LOADADDR (.ewram3) + SIZEOF (.ewram3)))

.ewram4         0x02003528        0x0
 *(.ewram4)
                0x02003528                        . = ALIGN (0x4)
                [!provide]                        PROVIDE (__load_start_ewram4 = LOADADDR (.ewram4))
                [!provide]                        PROVIDE (__load_stop_ewram4 = (LOADADDR (.ewram4) + SIZEOF (.ewram4)))

.ewram5         0x02003528        0x0
 *(.ewram5)
                0x02003528                        . = ALIGN (0x4)
                [!provide]                        PROVIDE (__load_start_ewram5 = LOADADDR (.ewram5))
                [!provide]                        PROVIDE (__load_stop_ewram5 = (LOADADDR (.ewram5) + SIZEOF (.ewram5)))

.ewram6         0x02003528        0x0
 *(.ewram6)
                0x02003528                        . = ALIGN (0x4)
                [!provide]                        PROVIDE (__load_start_ewram6 = LOADADDR (.ewram6))
                [!provide]                        PROVIDE (__load_stop_ewram6 = (LOADADDR (.ewram6) + SIZEOF (.ewram6)))

.ewram7         0x02003528        0x0
 *(.ewram7)
                0x02003528                        . = ALIGN (0x4)
                [!provide]                        PROVIDE (__load_start_ewram7 = LOADADDR (.ewram7))
                [!provide]                        PROVIDE (__load_stop_ewram7 = (LOADADDR (.ewram7) + SIZEOF (.ewram7)))

.ewram8         0x02003528        0x0
 *(.ewram8)
                0x02003528                        . = ALIGN (0x4)
                [!provide]                        PROVIDE (__load_start_ewram8 = LOADADDR (.ewram8))
                [!provide]                        PROVIDE (__load_stop_ewram8 = (LOADADDR (.ewram8) + SIZEOF (.ewram8)))

.ewram9         0x02003528        0x0
 *(.ewram9)
                0x02003528                        . = ALIGN (0x4)
                [!provide]                        PROVIDE (__load_start_ewram9 = LOADADDR (.ewram9))
                [!provide]                        PROVIDE (__load_stop_ewram9 = (LOADADDR (.ewram9) + SIZEOF (.ewram9)))
                0x02003528                        __ewram_overlay_end = ABSOLUTE (.)
                0x02003528                        __eheap_start = __ewram_overlay_end
                0x02003528                        _end = __ewram_overlay_end
                0x02003528                        __end__ = __ewram_overlay_end
                0x02003528                        __rom_end__ = __ewram_overlay_end

.stab
 *(.stab)

.stabstr
 *(.stabstr)

.stab.excl
 *(.stab.excl)

.stab.exclstr
 *(.stab.exclstr)

.stab.index
 *(.stab.index)

.stab.indexstr
 *(.stab.indexstr)

.comment        0x00000000       0x23
 *(.comment)
 .comment       0x00000000       0x23 C:/devkitPro/devkitARM/bin/../lib/gcc/arm-none-eabi/14.1.0/thumb/crtbegin.o
                                 0x24 (size before relaxing)
 .comment       0x00000023       0x24 controlState.o
 .comment       0x00000023       0x24 C:/devkitPro/devkitARM/bin/../lib/gcc/arm-none-eabi/14.1.0/../../../../arm-none-eabi/lib/thumb\libg.a(libc_a-init.o)
 .comment       0x00000023       0x24 C:/devkitPro/devkitARM/bin/../lib/gcc/arm-none-eabi/14.1.0/../../../../arm-none-eabi/lib/thumb\libsysbase.a(libsysbase_libsysbase_a-malloc_vars.o)
 .comment       0x00000023       0x24 C:/devkitPro/devkitARM/bin/../lib/gcc/arm-none-eabi/14.1.0/thumb/crtend.o

.ARM.attributes
                0x00000000       0x2c
 .ARM.attributes
                0x00000000       0x20 C:/devkitPro/devkitARM/bin/../lib/gcc/arm-none-eabi/14.1.0/../../../../arm-none-eabi/lib/thumb/gba_crt0.o
 .ARM.attributes
                0x00000020       0x1c C:/devkitPro/devkitARM/bin/../lib/gcc/arm-none-eabi/14.1.0/thumb/crti.o
 .ARM.attributes
                0x0000003c       0x2a C:/devkitPro/devkitARM/bin/../lib/gcc/arm-none-eabi/14.1.0/thumb/crtbegin.o
 .ARM.attributes
                0x00000066       0x2a controlState.o
 .ARM.attributes
                0x00000090       0x1a controlLogic.o
 .ARM.attributes
                0x000000aa       0x1a linkPortIO.o
 .ARM.attributes
                0x000000c4       0x1a main.o
 .ARM.attributes
                0x000000de       0x1a mainISR.o
 .ARM.attributes
                0x000000f8       0x1a memcpy256.o
 .ARM.attributes
                0x00000112       0x1a Abutton.o
 .ARM.attributes
                0x0000012c       0x1a Bbutton.o
 .ARM.attributes
                0x00000146       0x1a Ltrigger.o
 .ARM.attributes
                0x00000160       0x1a Rtrigger.o
 .ARM.attributes
                0x0000017a       0x1a STARTbutton.o
 .ARM.attributes
                0x00000194       0x1a Xbutton.o
 .ARM.attributes
                0x000001ae       0x1a Ybutton.o
 .ARM.attributes
                0x000001c8       0x1a ZbuttonPressed.o
 .ARM.attributes
                0x000001e2       0x1a ZbuttonUnpressed.o
 .ARM.attributes
                0x000001fc       0x1a cStick.o
 .ARM.attributes
                0x00000216       0x1a dPadLR.o
 .ARM.attributes
                0x00000230       0x1a dPadUD.o
 .ARM.attributes
                0x0000024a       0x1a dStick.o
 .ARM.attributes
                0x00000264       0x1a gcc.o
 .ARM.attributes
                0x0000027e       0x1a palette.o
 .ARM.attributes
                0x00000298       0x1a C:/devkitPro/libtonc/lib\libtonc.a(tonc_bios.o)
 .ARM.attributes
                0x000002b2       0x1c C:/devkitPro/devkitARM/bin/../lib/gcc/arm-none-eabi/14.1.0/thumb\libgcc.a(_call_via_rX.o)
 .ARM.attributes
                0x000002ce       0x2a C:/devkitPro/devkitARM/bin/../lib/gcc/arm-none-eabi/14.1.0/../../../../arm-none-eabi/lib/thumb\libg.a(libc_a-init.o)
 .ARM.attributes
                0x000002f8       0x2a C:/devkitPro/devkitARM/bin/../lib/gcc/arm-none-eabi/14.1.0/../../../../arm-none-eabi/lib/thumb\libsysbase.a(libsysbase_libsysbase_a-malloc_vars.o)
 .ARM.attributes
                0x00000322       0x2a C:/devkitPro/devkitARM/bin/../lib/gcc/arm-none-eabi/14.1.0/thumb/crtend.o
 .ARM.attributes
                0x0000034c       0x1c C:/devkitPro/devkitARM/bin/../lib/gcc/arm-none-eabi/14.1.0/thumb/crtn.o

.debug
 *(.debug)

.line
 *(.line)

.debug_srcinfo
 *(.debug_srcinfo)

.debug_sfnames
 *(.debug_sfnames)

.debug_aranges  0x00000000       0xd0
 *(.debug_aranges)
 .debug_aranges
                0x00000000       0x30 controlState.o
 .debug_aranges
                0x00000030       0x20 controlLogic.o
 .debug_aranges
                0x00000050       0x20 linkPortIO.o
 .debug_aranges
                0x00000070       0x20 main.o
 .debug_aranges
                0x00000090       0x20 mainISR.o
 .debug_aranges
                0x000000b0       0x20 memcpy256.o

.debug_pubnames
 *(.debug_pubnames)

.debug_info     0x00000000      0x830
 *(.debug_info)
 .debug_info    0x00000000      0x779 controlState.o
 .debug_info    0x00000779       0x25 controlLogic.o
 .debug_info    0x0000079e       0x25 linkPortIO.o
 .debug_info    0x000007c3       0x25 main.o
 .debug_info    0x000007e8       0x24 mainISR.o
 .debug_info    0x0000080c       0x24 memcpy256.o

.debug_abbrev   0x00000000      0x30b
 *(.debug_abbrev)
 .debug_abbrev  0x00000000      0x2a7 controlState.o
 .debug_abbrev  0x000002a7       0x14 controlLogic.o
 .debug_abbrev  0x000002bb       0x14 linkPortIO.o
 .debug_abbrev  0x000002cf       0x14 main.o
 .debug_abbrev  0x000002e3       0x14 mainISR.o
 .debug_abbrev  0x000002f7       0x14 memcpy256.o

.debug_line     0x00000000      0x897
 *(.debug_line)
 .debug_line    0x00000000      0x543 controlState.o
 .debug_line    0x00000543      0x117 controlLogic.o
 .debug_line    0x0000065a       0xf0 linkPortIO.o
 .debug_line    0x0000074a       0x8e main.o
 .debug_line    0x000007d8       0x5f mainISR.o
 .debug_line    0x00000837       0x60 memcpy256.o

.debug_frame    0x00000000       0x64
 *(.debug_frame)
 .debug_frame   0x00000000       0x64 controlState.o

.debug_str      0x00000000      0x663
 *(.debug_str)
 .debug_str     0x00000000      0x663 controlState.o
                                0x4ed (size before relaxing)
 .debug_str     0x00000663       0x98 controlLogic.o
 .debug_str     0x00000663       0x96 linkPortIO.o
 .debug_str     0x00000663       0x90 main.o
 .debug_str     0x00000663       0x93 mainISR.o
 .debug_str     0x00000663       0x95 memcpy256.o

.debug_loc
 *(.debug_loc)

.debug_macinfo
 *(.debug_macinfo)

.debug_weaknames
 *(.debug_weaknames)

.debug_funcnames
 *(.debug_funcnames)

.debug_typenames
 *(.debug_typenames)

.debug_varnames
 *(.debug_varnames)

.stack          0x00080000        0x0
                0x00080000                        _stack = .
 *(.stack)
LOAD C:/devkitPro/devkitARM/bin/../lib/gcc/arm-none-eabi/14.1.0/../../../../arm-none-eabi/lib/thumb/gba_crt0.o
LOAD C:/devkitPro/devkitARM/bin/../lib/gcc/arm-none-eabi/14.1.0/thumb/crti.o
LOAD C:/devkitPro/devkitARM/bin/../lib/gcc/arm-none-eabi/14.1.0/thumb/crtbegin.o
LOAD controlState.o
LOAD controlLogic.o
LOAD controlProfile.o
LOAD linkPortIO.o
LOAD macros.o
LOAD main.o
LOAD mainISR.o
LOAD memcpy256.o
LOAD Abutton.o
LOAD Bbutton.o
LOAD Ltrigger.o
LOAD Rtrigger.o
LOAD STARTbutton.o
LOAD Xbutton.o
LOAD Ybutton.o
LOAD ZbuttonPressed.o
LOAD ZbuttonUnpressed.o
LOAD cStick.o
LOAD dPadLR.o
LOAD dPadUD.o
LOAD dStick.o
LOAD gcc.o
LOAD hexChars.o
LOAD palette.o
LOAD C:/devkitPro/libgba/lib\libmm.a
LOAD C:/devkitPro/libtonc/lib\libtonc.a
START GROUP
LOAD C:/devkitPro/devkitARM/bin/../lib/gcc/arm-none-eabi/14.1.0/thumb\libgcc.a
LOAD C:/devkitPro/devkitARM/bin/../lib/gcc/arm-none-eabi/14.1.0/../../../../arm-none-eabi/lib/thumb\libg.a
LOAD C:/devkitPro/devkitARM/bin/../lib/gcc/arm-none-eabi/14.1.0/../../../../arm-none-eabi/lib/thumb\libc.a
LOAD C:/devkitPro/devkitARM/bin/../lib/gcc/arm-none-eabi/14.1.0/../../../../arm-none-eabi/lib/thumb\libsysbase.a
END GROUP
LOAD C:/devkitPro/devkitARM/bin/../lib/gcc/arm-none-eabi/14.1.0/thumb/crtend.o
LOAD C:/devkitPro/devkitARM/bin/../lib/gcc/arm-none-eabi/14.1.0/thumb/crtn.o
OUTPUT(C:/Users/Landon/Desktop/my_projects/PeachyGCC/PeachyGCC/PeachyGCC_mb.elf elf32-littlearm)
LOAD linker stubs

.debug_loclists
                0x00000000       0x52
 .debug_loclists
                0x00000000       0x52 controlState.o

.debug_rnglists
                0x00000000       0x2d
 .debug_rnglists
                0x00000000       0x2d controlState.o

.debug_line_str
                0x00000000       0xb6
 .debug_line_str
                0x00000000       0xb6 controlLogic.o
                                 0x8c (size before relaxing)
 .debug_line_str
                0x000000b6       0x8a linkPortIO.o
 .debug_line_str
                0x000000b6       0x84 main.o
 .debug_line_str
                0x000000b6       0x87 mainISR.o
 .debug_line_str
                0x000000b6       0x89 memcpy256.o
